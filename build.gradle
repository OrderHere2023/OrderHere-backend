plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
}

group = 'com.backend'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.4'
//    implementation 'org.springframework.boot:spring-boot-starter-amqp:3.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.1.4'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.1.4'

    // json
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'com.google.code.gson:gson:2.10.1'

    // jwt
//	implementation 'io.jsonwebtoken:jjwt-api'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl'
//	runtimeOnly 'io.jsonwebtoken:jjwt-jackson'

    // database
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//	implementation 'org.mapstruct:mapstruct'
//	annotationProcessor 'org.mapstruct:mapstruct-processor'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'
//	implementation 'redis.clients:jedis'

    // other
    implementation 'com.sendgrid:sendgrid-java'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.security:spring-security-test'
//	testImplementation 'org.mockito:mockito-core'
//	testImplementation 'org.mockito:mockito-junit-jupiter'

    // development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}