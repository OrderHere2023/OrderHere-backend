name: Build and Dockerize
on:
  push:
    branches: [ devops-liliya ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Give permission & Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Get current time as timestamp
        id: time
        run: echo "date=$(date +'%m-%dT%H-%M')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker

      - name: Build, tag and push to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "order-here"
          IMAGE_TAG: ${{ steps.time.outputs.date}}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update image to ECS
        id: deploy-ecs
        env:
          ECS_CLUSTER: "my-ecs-cluster"
          ECS_SERVICE: "orderhere-service2"
          #TASK_DEFINITION: arn:aws:ecs:us-east-1:411512143549:task-definition/orderhere:3
          TASK_DEFINITION: arn:aws:ecs:us-east-2:411512143549:task-definition/orderhere:latest
        run: |
          aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition $TASK_DEFINITION \
          --force-new-deployment
